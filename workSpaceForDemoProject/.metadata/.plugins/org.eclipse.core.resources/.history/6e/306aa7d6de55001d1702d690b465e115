package com.publicissapient.tour;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.cloud.gateway.route.RouteLocator;
import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;
import org.springframework.context.annotation.Bean;

@SpringBootApplication
@EnableConfigurationProperties
public class GatewayApplication {

	public static void main(String[] args) {
		SpringApplication.run(GatewayApplication.class, args);
	}

	@Bean
	public RouteLocator appRoutes(RouteLocatorBuilder routeBuilder, MyServerConfiguration config) {
		String registrationserver = config.getRegistrationServer();
		String tourserver = config.getTourServer();
		String notificationserver = config.getNotificationServer();

		return routeBuilder.routes().route(p -> p.path("/customer/**").uri(registrationserver))
				.route(p -> p.path("/adminRegistration/**").uri(registrationserver))
				.route(p -> p.path("/admin/**").uri(tourserver))
				.route(p -> p.path("/customer/**").uri(tourserver))
				.route(p -> p.path("/notify/**").uri(notificationserver)).build();
	}
}
@ConfigurationProperties
class MyServerConfiguration {
	 private String registrationServer = "http://localhost:8087/";
	    private String tourServer = "http://localhost:8088/";
	    private String notificationServer = "http://localhost:8084/";
	    public String getRegistrationServer() {
	        return registrationServer;
	    }
	    public void setRegistrationServer(String registrationServer) {
	        this.registrationServer = registrationServer;
	    }
	    public String getTourServer() {
	        return tourServer;
	    }
	    public void setTourServer(String tourServer) {
	        this.tourServer = tourServer;
	    }
	    public String getNotificationServer() {
	        return notificationServer;
	    }
	    public void setNotificationServer(String notificationServer) {
	        this.notificationServer = notificationServer;
	    }

}
