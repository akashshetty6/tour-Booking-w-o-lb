package com.publicissapient.tour.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.publicissapient.tour.dto.BookingDTO;
import com.publicissapient.tour.entity.Booking;
import com.publicissapient.tour.entity.Packages;
import com.publicissapient.tour.service.CustomerServiceImpl;
import com.publicissapient.tour.util.Message;

import io.micrometer.core.annotation.Timed;

@RestController
@RequestMapping("/customer")
public class CustomerRestController {

	@Autowired
	CustomerServiceImpl customerServiceImpl;

	
	@GetMapping(path = "/listPackage", produces = MediaType.APPLICATION_JSON_VALUE)
	@Timed(value="requests.count.listPackage")
	public ResponseEntity<List<Packages>> listPackage() {
		return ResponseEntity.ok(customerServiceImpl.listAllPackages());
	} 
	
	@GetMapping(path = "/listBookings/{userName}", produces = MediaType.APPLICATION_JSON_VALUE)
	@Timed(value="requests.count.listBookings")
	public ResponseEntity<List<Booking>> listBookings(@PathVariable ("userName") String userName) {
		return ResponseEntity.ok(customerServiceImpl.listBookings(userName));
	} 

	@PostMapping(path = "/book", consumes = MediaType.APPLICATION_JSON_VALUE,produces=MediaType.APPLICATION_JSON_VALUE)
	@Timed(value="requests.count.booking")
	public ResponseEntity<Booking> booking(@RequestBody BookingDTO bookingDTO)  {
		Booking booking=customerServiceImpl.booking(bookingDTO);
		return ResponseEntity.ok(booking);
	}

	@DeleteMapping(path = "/delete/{bookingId}")
	@Timed(value="requests.count.delete")
	public ResponseEntity<Message> delete(@PathVariable("bookingId") int id) {
		customerServiceImpl.delete(id);
		return ResponseEntity.ok(new Message("Booking is deleted"));
	} 
	
	

}
