package com.publicissapient.tour;

import static org.mockito.ArgumentMatchers.contains;
import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.HashSet;
import java.util.Optional;
import java.util.Set;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;

import com.publicissapient.tour.entity.Customer;
import com.publicissapient.tour.entity.Role;
import com.publicissapient.tour.repository.CustomerRepository;

@SpringBootTest
@AutoConfigureMockMvc
public class AdminRestControllerTest {

	@Autowired
	MockMvc mvc;

	@MockBean
	CustomerRepository customerRepo;

	@Test
	public void findByIdTest() throws Exception {
		Set<Role> role=new HashSet<>();
		role.add(new Role(1,"customer"));
		Customer customer = new Customer(1, 20,"akash","shetty","812334003","a@gmail.com","bhatkal","male","akash",true,role);

		when(customerRepo.findById(1)).thenReturn(Optional.of(customer));

		mvc.perform(get("/admin/find/1")).andDo(print()).andExpect(status().is3xxRedirection())
				.andExpect(content().contentType(MediaType.APPLICATION_JSON_VALUE))
				.andExpect(content());

//		mvc.perform(get("/customer/find/200")).andDo(print()).andExpect(status().isNotFound());

	} 

}
